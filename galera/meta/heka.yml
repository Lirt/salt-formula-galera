log_collector:
  decoder:
    galera:
      engine: sandbox
      module_file: /usr/share/lma_collector/decoders/galera.lua
      module_dir: /usr/share/lma_collector/common;/usr/share/heka/lua_modules
      adjust_timezone: true
  input:
    galera:
      engine: logstreamer
      log_directory: "/var/log"
      file_match: 'mysql/error.log$'
      differentiator: ["galera"]
      decoder: "galera_decoder"
      splitter: "galera_splitter"
  splitter:
    galera:
      engine: regex
      delimiter: '\n([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2})'
      delimiter_eol: false
metric_collector:
  trigger:
    mysql_check:
      description: 'MySQL cannot be checked'
      severity: down
      rules:
      - metric: mysql_check
        relational_operator: '=='
        threshold: 0
        window: 60
        periods: 0
        function: last
    mysql_node_connected:
      description: 'The MySQL service has lost connectivity with the other nodes'
      severity: down
      rules:
      - metric: mysql_cluster_connected
        relational_operator: '=='
        threshold: 0
        window: 30
        periods: 1
        function: min
    mysql_node_ready:
      description: "The MySQL service isn't ready to serve queries"
      severity: down
      rules:
      - metric: mysql_cluster_ready
        relational_operator: '=='
        threshold: 0
        window: 30
        periods: 1
        function: min
  alarm:
    mysql_check:
      alerting: enabled
      triggers:
      - mysql_check
      dimension:
        service: mysql-check
    mysql_node_status:
      alerting: enabled
      triggers:
      - mysql_node_connected
      - mysql_node_ready
      dimension:
        service: mysql-node-status
aggregator:
  alarm_cluster:
    mysql_check:
      policy: availability_of_members
      alerting: enabled
      match:
        service: mysql-check
      group_by: hostname
      members:
      - mysql_check
      dimension:
        service: mysql
        nagios_host: 01-service-clusters
    mysql_status:
      policy: availability_of_members
      alerting: enabled
      match:
        service: mysql-node-status
      group_by: hostname
      members:
      - mysql_node_status
      dimension:
        service: mysql
        nagios_host: 01-service-clusters
    mysql:
      policy: highest_severity
      alerting: enabled_with_notification
      match:
        service: mysql
      members:
      - mysql_check
      - mysql_status
      dimension:
        cluster_name: mysql
        nagios_host: 00-top-clusters
